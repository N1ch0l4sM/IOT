version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: weather_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - weather_network

  # MinIO Object Storage
  minio:
    image: minio/minio:RELEASE.2025-02-03T21-03-04Z-cpuv1
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - weather_network

  # Redis for Airflow
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - weather_network

  # MongoDB Database
  mongodb:
    image: mongo:6
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo123
      MONGO_INITDB_DATABASE: weather_mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - weather_network

  airflow-init:
    build: ./docker/airflow
    entrypoint: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin
      "
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:postgres123@postgres:5432/weather_db
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://postgres:postgres123@postgres:5432/weather_db
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    networks:
      - weather_network

  # Airflow Webserver
  airflow-webserver:
    build: ./docker/airflow
    command: airflow webserver
    environment:
      - PYTHONPATH=/opt/airflow
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:postgres123@postgres:5432/weather_db
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://postgres:postgres123@postgres:5432/weather_db
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=true
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ~/.kaggle:/home/airflow/.kaggle:ro
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - weather_network

  # Airflow Scheduler
  airflow-scheduler:
    build: ./docker/airflow
    command: airflow scheduler
    environment:
      - PYTHONPATH=/opt/airflow
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:postgres123@postgres:5432/weather_db
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://postgres:postgres123@postgres:5432/weather_db
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ~/.kaggle:/home/airflow/.kaggle:ro
    depends_on:
      - postgres
      - redis
    networks:
      - weather_network

  # Airflow Worker
  airflow-worker:
    build: ./docker/airflow
    command: airflow celery worker
    environment:
      - PYTHONPATH=/opt/airflow
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:postgres123@postgres:5432/weather_db
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://postgres:postgres123@postgres:5432/weather_db
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ~/.kaggle:/home/airflow/.kaggle:ro
    depends_on:
      - postgres
      - redis
    networks:
      - weather_network

volumes:
  postgres_data:
  minio_data:
  mongo_data:

networks:
  weather_network:
    driver: bridge
